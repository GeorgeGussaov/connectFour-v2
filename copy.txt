const int x = 7;
        const int y = 6;
        byte[,] field = new byte[y, x];
        string[] gameEnd = { "Ничья", "Красный", "Синий" };
        byte player = 2;
        int step = 0;


        void showField(byte[,] mas, int e1, int e2)
        {
            /*for (int i = 0; i < y; i++)
            {
                for (int j = 0; j < x; j++)
                {
                    if (mas[i, j] == 1)
                        dataGridViewField.Rows[i + (5 - j)].Cells[j].Value = "1";
                    else
                        if (mas[i, j] == 2)
                            dataGridViewField.Rows[i + (5 - j)].Cells[j].Value = "2";
                }

            }*/
            player = (byte)(player % 2 + 1);
            if (player == 1)
                dataGridViewField.Rows[e1].Cells[e2].Value = 1;
            if (player == 2)
                dataGridViewField.Rows[e1].Cells[e2].Value = 2;
            
        }
        
        
        bool bottomCellCheck(byte[,] mas)
        {
            return true;
        }


        public FormGame()
        {
            InitializeComponent();
            dataGridViewField.Rows.Add(6);
        }



        //bool isGameOver(byte[,] mas, byte player)
        //{
            
        //}

        private void dataGridViewField_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            /*if (field[e.RowIndex, e.ColumnIndex] == 0)
            {
                MessageBox.Show(e.RowIndex + " " + e.ColumnIndex);
                player = (byte)(player % 2 + 1); //next player step
                field[e.RowIndex, e.ColumnIndex] = player; //change field
                showField(field);
                //if (bottomCellCheck(field) == false) MessageBox.Show("no");
            }*/
            showField(field, e.RowIndex, e.ColumnIndex);
            
        }